#include <zephyr/dt-bindings/sensor/qdec_stm32.h>
/{
	pwmmotors {
		compatible = "pwm-motors";
		sabertooth1_1: pwm_1 {
			pwms  = <&pwm2 1 PWM_MSEC(20) (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		sabertooth1_2: pwm_2 {
			pwms  = <&pwm2 2 PWM_MSEC(20) (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		sabertooth3_1: pwm_3 {
			pwms  = <&pwm2 3 PWM_MSEC(20) (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		sabertooth3_2: pwm_4 {
			pwms  = <&pwm2 4 PWM_MSEC(20) (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		cytron1_1: pwm_5 {
			pwms  = <&pwm3 1 PWM_MSEC(20) (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		cytron1_2: pwm_6 {
			pwms  = <&pwm3 2 PWM_MSEC(20) (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		cytron3_1: pwm_7 {
			pwms  = <&pwm4 1 PWM_MSEC(20) (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		cytron3_2: pwm_8 {
			pwms  = <&pwm4 2 PWM_MSEC(20) (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		servo_1: pwm_9 {
			pwms  = <&pwm4 3 PWM_MSEC(20) (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		servo_2: pwm_10 {
			pwms  = <&pwm4 4 PWM_MSEC(20) (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		extra_2: pwm_13 {
			pwms = <&pwm13 1 PWM_MSEC(20)  (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};

		    extra_3: pwm_14 {
			pwms = <&pwm15 1 PWM_MSEC(20)  (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		    extra_4: pwm_15 {
			pwms = <&pwm15 2 PWM_MSEC(20)  (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		    extra_5: pwm_16 {
			pwms = <&pwm15 3 PWM_MSEC(20)  (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		extra_6: pwm_17 {
			pwms = <&pwm16 1 PWM_MSEC(20)  (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		extra_7: pwm_18 {
			pwms = <&pwm16 2 PWM_MSEC(20)  (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		extra_8: pwm_19 {
			pwms = <&pwm16 3 PWM_MSEC(20)  (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		extra_9: pwm_20 {
			pwms = <&pwm16 4 PWM_MSEC(20)  (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		extra_10: pwm_21 {
			pwms = <&pwm1 1 PWM_MSEC(20)  (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		extra_11: pwm_22 { 
			pwms = <&pwm1 2 PWM_MSEC(20)  (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};
		extra_12: pwm_23 { 
			pwms = <&pwm1 3 PWM_MSEC(20)  (PWM_POLARITY_NORMAL)>;
			min-pulse = <PWM_USEC(1100)>;
			max-pulse = <PWM_USEC(1900)>;
		};

	};
	aliases {
			debug-uart = &usart2;
			mother-uart = &usart6;
			stepper-motor1 = &stepper_motor_1; 
			stepper-motor2 = &stepper_motor_2; 
			stepper-motor3 = &stepper_motor_3;
			imu-lower-joint = &lj_imu; 
			imu-upper-joint = &uj_imu;
      			stepper-motor1 = &stepper_motor_1; 
			stepper-motor2 = &stepper_motor_2; 
			stepper-motor3 = &stepper_motor_3;
	};
    chosen {
            zephyr,console = &usart2;
            zephyr,shell-uart = &usart2;
	};
};

&usart6 {
	pinctrl-0 = <&usart6_tx_pc6 &usart6_rx_pc7>;
	pinctrl-names= "default";
	status = "okay";
	current-speed = <100000>;
	parity = "even";
	stop-bits = "2";
};

&usart2 {
        pinctrl-0 = <&usart2_tx_pd5 &usart2_rx_pd6>;
        pinctrl-names= "default";
        status = "okay";
        current-speed = <115200>;
};

&zephyr_udc0 {
	cdc_acm_uart0: cdc_acm_uart0 {
		compatible = "zephyr,cdc-acm-uart";
		status = "okay";
	};
};

&timers1{
	status = "okay";
	st,prescaler = <5599>; 

	pwm1: pwm {
		status = "okay";
		pinctrl-0 = <&tim1_ch1n_pa7 &tim1_ch1_pa8 &tim1_ch2_pa9>;
		pinctrl-names = "default"; 
	};
};

&timers2 {
	status = "okay";
	st,prescaler = <5599>;

	pwm2: pwm {
		status = "okay";
		pinctrl-0 = <&tim2_ch1_pa0 &tim2_ch2_pa1 &tim2_ch3_pa2 &tim2_ch4_pa3 &tim2_ch1_pa5>;
		pinctrl-names = "default";
	};
};

&timers3 {
	status = "okay";
	st,prescaler = <5599>;

	pwm3: pwm {
		status = "okay";
		pinctrl-0 = <&tim3_ch1_pb4 &tim3_ch2_pb5>;
		pinctrl-names = "default";
	};
};

&timers4 {
	status = "okay";
	st,prescaler = <5599>;

	pwm4: pwm {
		status = "okay";
		pinctrl-0 = <&tim4_ch1_pd12 &tim4_ch2_pd13 &tim4_ch3_pd14 &tim4_ch4_pd15>;
		pinctrl-names = "default";
	};
};

&timers12 { //does not work
	status = "okay";
	st,prescaler = <5599>;

	pwm12: pwm {
		status = "okay";
		pinctrl-0 = <&tim12_ch1_pb14 &tim12_ch2_pb15>;
		pinctrl-names = "default";
	};
};

&timers13 {
	status = "okay";
	st,prescaler = <83>;
	counter0: counter {
		status = "disabled";
	};
	pwm13: pwm {
		status = "okay";
		pinctrl-0 = <&tim13_ch1_pa6>;
		pinctrl-names = "default";
	};
};

&timers15{
    status = "okay";
    st,prescaler = <5599>;

    pwm15: pwm { 
		status = "okay"; 
		pinctrl-0 = <&tim15_ch1_pc12 &tim15_ch1n_pe4 &tim15_ch1_pe5 &tim15_ch2_pe6>;
		pinctrl-names = "default"; 
  };
};
&timers16 { 
	status = "okay"; 
	st,prescaler = <5599>; 

	pwm16: pwm { 
		status = "okay"; 
		pinctrl-0 = <&tim16_ch1n_pb6 &tim16_ch1_pb8 &tim16_ch1_pf6 &tim16_ch1n_pf8>;
		pinctrl-names = "default"; 
	};

	steppermotors { 
		compatible = "stepper-motors"; 
		stepper_motor_1: motor_1 { 
			label = "First link"; 
			dir-gpios = <&gpiob 7 GPIO_ACTIVE_LOW>; //D0 PB7 
			step-gpios = <&gpioc 0 GPIO_ACTIVE_LOW>; //A1 PC0
		};
	
		stepper_motor_2: motor_2 {
			label = "Second Link"; 
			dir-gpios = <&gpiog 14 GPIO_ACTIVE_LOW>; //D2
			step-gpios = <&gpiob 1 GPIO_ACTIVE_LOW>; //A3
		};
	
		stepper_motor_3: motor_3 { 
			label = "Turn Table";
			dir-gpios = <&gpioe 13 GPIO_ACTIVE_LOW>; //D3
			step-gpios = <&gpiof 7 GPIO_ACTIVE_LOW>; //A5
		};
	};
};
&i2c1 {
	status = "okay"; 
	pinctrl-0 = <&i2c1_scl_pb6 &i2c1_sda_pb7>;
	pinctrl-names = "default"; 
	clock-frequency = <I2C_BITRATE_STANDARD>; 
	lj_imu: mpu6050@68 { 
		compatible = "invensense,mpu6050";
		reg = <0x68>;
		status = "okay"; 
	}; 
	uj_imu: mpu6050@69 { 
		compatible = "invensense,mpu6050";
		reg = <0x69>;
		status = "okay"; 
	};

};
